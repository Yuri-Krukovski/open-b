/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.starter.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

/**
 * NonSweepingAuthorisationRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class NonSweepingAuthorisationRequest {
  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private UUID userId;

  public static final String SERIALIZED_NAME_APPLICATION_USER_ID = "applicationUserId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_USER_ID)
  private String applicationUserId;

  public static final String SERIALIZED_NAME_FORWARD_PARAMETERS = "forwardParameters";
  @SerializedName(SERIALIZED_NAME_FORWARD_PARAMETERS)
  private List<String> forwardParameters = null;

  public static final String SERIALIZED_NAME_CONTEXT_TYPE = "contextType";
  @SerializedName(SERIALIZED_NAME_CONTEXT_TYPE)
  private PaymentContextType contextType = PaymentContextType.OTHER;

  public static final String SERIALIZED_NAME_INSTITUTION_ID = "institutionId";
  @SerializedName(SERIALIZED_NAME_INSTITUTION_ID)
  private String institutionId;

  public static final String SERIALIZED_NAME_CALLBACK = "callback";
  @SerializedName(SERIALIZED_NAME_CALLBACK)
  private String callback;

  public static final String SERIALIZED_NAME_REDIRECT = "redirect";
  @SerializedName(SERIALIZED_NAME_REDIRECT)
  private RedirectRequest redirect;

  public static final String SERIALIZED_NAME_ONE_TIME_TOKEN = "oneTimeToken";
  @SerializedName(SERIALIZED_NAME_ONE_TIME_TOKEN)
  private Boolean oneTimeToken;

  public static final String SERIALIZED_NAME_CONTROL_PARAMETERS = "controlParameters";
  @SerializedName(SERIALIZED_NAME_CONTROL_PARAMETERS)
  private NonSweepingControlParameters controlParameters;

  public static final String SERIALIZED_NAME_INITIATION_DETAILS = "initiationDetails";
  @SerializedName(SERIALIZED_NAME_INITIATION_DETAILS)
  private InitiationDetails initiationDetails;

  public NonSweepingAuthorisationRequest() { 
  }

  public NonSweepingAuthorisationRequest userId(UUID userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * This is the Yapily user identifier for the user returned by the create user step POST ../users
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the Yapily user identifier for the user returned by the create user step POST ../users")

  public UUID getUserId() {
    return userId;
  }


  public void setUserId(UUID userId) {
    this.userId = userId;
  }


  public NonSweepingAuthorisationRequest applicationUserId(String applicationUserId) {
    
    this.applicationUserId = applicationUserId;
    return this;
  }

   /**
   * A client&#39;s own user reference. If the client wants to work with their own unique references for individual PSUs then they can use the applicationUserId property to provide that value. Where Yapily does not already have a Yapily userId that matches the supplied applicationUserId, then a new Yapily userId is created automatically and linked to the applicationUserId value.  Clients can then use either their own applicationUserId or the Yapily userId to reference the same user in future calls.
   * @return applicationUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A client's own user reference. If the client wants to work with their own unique references for individual PSUs then they can use the applicationUserId property to provide that value. Where Yapily does not already have a Yapily userId that matches the supplied applicationUserId, then a new Yapily userId is created automatically and linked to the applicationUserId value.  Clients can then use either their own applicationUserId or the Yapily userId to reference the same user in future calls.")

  public String getApplicationUserId() {
    return applicationUserId;
  }


  public void setApplicationUserId(String applicationUserId) {
    this.applicationUserId = applicationUserId;
  }


  public NonSweepingAuthorisationRequest forwardParameters(List<String> forwardParameters) {
    
    this.forwardParameters = forwardParameters;
    return this;
  }

  public NonSweepingAuthorisationRequest addForwardParametersItem(String forwardParametersItem) {
    if (this.forwardParameters == null) {
      this.forwardParameters = new ArrayList<String>();
    }
    this.forwardParameters.add(forwardParametersItem);
    return this;
  }

   /**
   * Extra parameters the TPP may want to get forwarded in the callback request after the PSU redirect.
   * @return forwardParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Extra parameters the TPP may want to get forwarded in the callback request after the PSU redirect.")

  public List<String> getForwardParameters() {
    return forwardParameters;
  }


  public void setForwardParameters(List<String> forwardParameters) {
    this.forwardParameters = forwardParameters;
  }


  public NonSweepingAuthorisationRequest contextType(PaymentContextType contextType) {
    
    this.contextType = contextType;
    return this;
  }

   /**
   * Get contextType
   * @return contextType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaymentContextType getContextType() {
    return contextType;
  }


  public void setContextType(PaymentContextType contextType) {
    this.contextType = contextType;
  }


  public NonSweepingAuthorisationRequest institutionId(String institutionId) {
    
    this.institutionId = institutionId;
    return this;
  }

   /**
   * __Mandatory__. The reference to the &#x60;Institution&#x60; which identifies which institution the authorisation request is sent to.
   * @return institutionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "yapily-mock", required = true, value = "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.")

  public String getInstitutionId() {
    return institutionId;
  }


  public void setInstitutionId(String institutionId) {
    this.institutionId = institutionId;
  }


  public NonSweepingAuthorisationRequest callback(String callback) {
    
    this.callback = callback;
    return this;
  }

   /**
   * __Optional__. The server to redirect the user to after the user complete the authorisation at the &#x60;Institution&#x60;. &lt;br&gt;&lt;br&gt;See [Using a callback (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-optional) for more information.
   * @return callback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://display-parameters.com", value = "__Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-optional) for more information.")

  public String getCallback() {
    return callback;
  }


  public void setCallback(String callback) {
    this.callback = callback;
  }


  public NonSweepingAuthorisationRequest redirect(RedirectRequest redirect) {
    
    this.redirect = redirect;
    return this;
  }

   /**
   * Get redirect
   * @return redirect
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RedirectRequest getRedirect() {
    return redirect;
  }


  public void setRedirect(RedirectRequest redirect) {
    this.redirect = redirect;
  }


  public NonSweepingAuthorisationRequest oneTimeToken(Boolean oneTimeToken) {
    
    this.oneTimeToken = oneTimeToken;
    return this;
  }

   /**
   * __Conditional__. Used to receive a &#x60;oneTimeToken&#x60; rather than a &#x60;consentToken&#x60; at the &#x60;callback&#x60; for additional security. This can only be used when the &#x60;callback&#x60; is set. &lt;br&gt;&lt;br&gt;See [Using a callback with an OTT (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-with-an-ott-optional) for more information.
   * @return oneTimeToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-with-an-ott-optional) for more information.")

  public Boolean getOneTimeToken() {
    return oneTimeToken;
  }


  public void setOneTimeToken(Boolean oneTimeToken) {
    this.oneTimeToken = oneTimeToken;
  }


  public NonSweepingAuthorisationRequest controlParameters(NonSweepingControlParameters controlParameters) {
    
    this.controlParameters = controlParameters;
    return this;
  }

   /**
   * Get controlParameters
   * @return controlParameters
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public NonSweepingControlParameters getControlParameters() {
    return controlParameters;
  }


  public void setControlParameters(NonSweepingControlParameters controlParameters) {
    this.controlParameters = controlParameters;
  }


  public NonSweepingAuthorisationRequest initiationDetails(InitiationDetails initiationDetails) {
    
    this.initiationDetails = initiationDetails;
    return this;
  }

   /**
   * Get initiationDetails
   * @return initiationDetails
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public InitiationDetails getInitiationDetails() {
    return initiationDetails;
  }


  public void setInitiationDetails(InitiationDetails initiationDetails) {
    this.initiationDetails = initiationDetails;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NonSweepingAuthorisationRequest nonSweepingAuthorisationRequest = (NonSweepingAuthorisationRequest) o;
    return Objects.equals(this.userId, nonSweepingAuthorisationRequest.userId) &&
        Objects.equals(this.applicationUserId, nonSweepingAuthorisationRequest.applicationUserId) &&
        Objects.equals(this.forwardParameters, nonSweepingAuthorisationRequest.forwardParameters) &&
        Objects.equals(this.contextType, nonSweepingAuthorisationRequest.contextType) &&
        Objects.equals(this.institutionId, nonSweepingAuthorisationRequest.institutionId) &&
        Objects.equals(this.callback, nonSweepingAuthorisationRequest.callback) &&
        Objects.equals(this.redirect, nonSweepingAuthorisationRequest.redirect) &&
        Objects.equals(this.oneTimeToken, nonSweepingAuthorisationRequest.oneTimeToken) &&
        Objects.equals(this.controlParameters, nonSweepingAuthorisationRequest.controlParameters) &&
        Objects.equals(this.initiationDetails, nonSweepingAuthorisationRequest.initiationDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, applicationUserId, forwardParameters, contextType, institutionId, callback, redirect, oneTimeToken, controlParameters, initiationDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NonSweepingAuthorisationRequest {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    applicationUserId: ").append(toIndentedString(applicationUserId)).append("\n");
    sb.append("    forwardParameters: ").append(toIndentedString(forwardParameters)).append("\n");
    sb.append("    contextType: ").append(toIndentedString(contextType)).append("\n");
    sb.append("    institutionId: ").append(toIndentedString(institutionId)).append("\n");
    sb.append("    callback: ").append(toIndentedString(callback)).append("\n");
    sb.append("    redirect: ").append(toIndentedString(redirect)).append("\n");
    sb.append("    oneTimeToken: ").append(toIndentedString(oneTimeToken)).append("\n");
    sb.append("    controlParameters: ").append(toIndentedString(controlParameters)).append("\n");
    sb.append("    initiationDetails: ").append(toIndentedString(initiationDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

