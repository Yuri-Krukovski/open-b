/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.starter.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.math.BigDecimal;
import java.util.*;

/**
 * Account
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class Account {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private BigDecimal balance;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_USAGE_TYPE = "usageType";
  @SerializedName(SERIALIZED_NAME_USAGE_TYPE)
  private UsageType usageType;

  public static final String SERIALIZED_NAME_ACCOUNT_TYPE = "accountType";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE)
  private AccountType accountType;

  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  private String nickname;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private String details;

  public static final String SERIALIZED_NAME_ACCOUNT_NAMES = "accountNames";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NAMES)
  private List<AccountName> accountNames = null;

  public static final String SERIALIZED_NAME_ACCOUNT_IDENTIFICATIONS = "accountIdentifications";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDENTIFICATIONS)
  private Set<AccountIdentification> accountIdentifications = null;

  public static final String SERIALIZED_NAME_ACCOUNT_BALANCES = "accountBalances";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_BALANCES)
  private List<AccountBalance> accountBalances = null;

  public static final String SERIALIZED_NAME_CONSOLIDATED_ACCOUNT_INFORMATION = "consolidatedAccountInformation";
  @SerializedName(SERIALIZED_NAME_CONSOLIDATED_ACCOUNT_INFORMATION)
  private ConsolidatedAccountInformation consolidatedAccountInformation;

  public Account() { 
  }

  public Account id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the account.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the account.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Account type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Specifies the type of account e.g. (BUSINESS_CURRENT).
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the type of account e.g. (BUSINESS_CURRENT).")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public Account description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Product name as defined by the financial institution for this account
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product name as defined by the financial institution for this account")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Account balance(BigDecimal balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * Main / headline balance for the account. &lt;br&gt;&lt;br&gt; Use of this field is recommended as fallback only. Instead, use of the typed balances (accountBalances) is recommended.
   * @return balance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Main / headline balance for the account. <br><br> Use of this field is recommended as fallback only. Instead, use of the typed balances (accountBalances) is recommended.")

  public BigDecimal getBalance() {
    return balance;
  }


  public void setBalance(BigDecimal balance) {
    this.balance = balance;
  }


  public Account currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Currency the bank account balance is denoted in. &lt;br&gt;&lt;br&gt; Specified as a 3-letter ISO 4217 currency code
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency the bank account balance is denoted in. <br><br> Specified as a 3-letter ISO 4217 currency code")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public Account usageType(UsageType usageType) {
    
    this.usageType = usageType;
    return this;
  }

   /**
   * Get usageType
   * @return usageType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UsageType getUsageType() {
    return usageType;
  }


  public void setUsageType(UsageType usageType) {
    this.usageType = usageType;
  }


  public Account accountType(AccountType accountType) {
    
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AccountType getAccountType() {
    return accountType;
  }


  public void setAccountType(AccountType accountType) {
    this.accountType = accountType;
  }


  public Account nickname(String nickname) {
    
    this.nickname = nickname;
    return this;
  }

   /**
   * Nickname of the account that was provided by the account owner. &lt;br&gt;&lt;br&gt; May be used to aid identification of the account.
   * @return nickname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Nickname of the account that was provided by the account owner. <br><br> May be used to aid identification of the account.")

  public String getNickname() {
    return nickname;
  }


  public void setNickname(String nickname) {
    this.nickname = nickname;
  }


  public Account details(String details) {
    
    this.details = details;
    return this;
  }

   /**
   * Supplementary specifications that might be provided by the Bank. These provide further characteristics about the account.
   * @return details
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Supplementary specifications that might be provided by the Bank. These provide further characteristics about the account.")

  public String getDetails() {
    return details;
  }


  public void setDetails(String details) {
    this.details = details;
  }


  public Account accountNames(List<AccountName> accountNames) {
    
    this.accountNames = accountNames;
    return this;
  }

  public Account addAccountNamesItem(AccountName accountNamesItem) {
    if (this.accountNames == null) {
      this.accountNames = new ArrayList<AccountName>();
    }
    this.accountNames.add(accountNamesItem);
    return this;
  }

   /**
   * Get accountNames
   * @return accountNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AccountName> getAccountNames() {
    return accountNames;
  }


  public void setAccountNames(List<AccountName> accountNames) {
    this.accountNames = accountNames;
  }


  public Account accountIdentifications(Set<AccountIdentification> accountIdentifications) {
    
    this.accountIdentifications = accountIdentifications;
    return this;
  }

  public Account addAccountIdentificationsItem(AccountIdentification accountIdentificationsItem) {
    if (this.accountIdentifications == null) {
      this.accountIdentifications = new LinkedHashSet<AccountIdentification>();
    }
    this.accountIdentifications.add(accountIdentificationsItem);
    return this;
  }

   /**
   * Get accountIdentifications
   * @return accountIdentifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<AccountIdentification> getAccountIdentifications() {
    return accountIdentifications;
  }


  public void setAccountIdentifications(Set<AccountIdentification> accountIdentifications) {
    this.accountIdentifications = accountIdentifications;
  }


  public Account accountBalances(List<AccountBalance> accountBalances) {
    
    this.accountBalances = accountBalances;
    return this;
  }

  public Account addAccountBalancesItem(AccountBalance accountBalancesItem) {
    if (this.accountBalances == null) {
      this.accountBalances = new ArrayList<AccountBalance>();
    }
    this.accountBalances.add(accountBalancesItem);
    return this;
  }

   /**
   * Get accountBalances
   * @return accountBalances
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AccountBalance> getAccountBalances() {
    return accountBalances;
  }


  public void setAccountBalances(List<AccountBalance> accountBalances) {
    this.accountBalances = accountBalances;
  }


  public Account consolidatedAccountInformation(ConsolidatedAccountInformation consolidatedAccountInformation) {
    
    this.consolidatedAccountInformation = consolidatedAccountInformation;
    return this;
  }

   /**
   * Get consolidatedAccountInformation
   * @return consolidatedAccountInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConsolidatedAccountInformation getConsolidatedAccountInformation() {
    return consolidatedAccountInformation;
  }


  public void setConsolidatedAccountInformation(ConsolidatedAccountInformation consolidatedAccountInformation) {
    this.consolidatedAccountInformation = consolidatedAccountInformation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.id, account.id) &&
        Objects.equals(this.type, account.type) &&
        Objects.equals(this.description, account.description) &&
        Objects.equals(this.balance, account.balance) &&
        Objects.equals(this.currency, account.currency) &&
        Objects.equals(this.usageType, account.usageType) &&
        Objects.equals(this.accountType, account.accountType) &&
        Objects.equals(this.nickname, account.nickname) &&
        Objects.equals(this.details, account.details) &&
        Objects.equals(this.accountNames, account.accountNames) &&
        Objects.equals(this.accountIdentifications, account.accountIdentifications) &&
        Objects.equals(this.accountBalances, account.accountBalances) &&
        Objects.equals(this.consolidatedAccountInformation, account.consolidatedAccountInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, description, balance, currency, usageType, accountType, nickname, details, accountNames, accountIdentifications, accountBalances, consolidatedAccountInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    usageType: ").append(toIndentedString(usageType)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    accountNames: ").append(toIndentedString(accountNames)).append("\n");
    sb.append("    accountIdentifications: ").append(toIndentedString(accountIdentifications)).append("\n");
    sb.append("    accountBalances: ").append(toIndentedString(accountBalances)).append("\n");
    sb.append("    consolidatedAccountInformation: ").append(toIndentedString(consolidatedAccountInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

