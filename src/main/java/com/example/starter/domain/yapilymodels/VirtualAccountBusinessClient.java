/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.starter.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * VirtualAccountBusinessClient
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class VirtualAccountBusinessClient {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private VirtualAccountClientBusinessType type;

  public static final String SERIALIZED_NAME_REGISTRATION_NUMBER = "registrationNumber";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_NUMBER)
  private String registrationNumber;

  public static final String SERIALIZED_NAME_REGISTERED_ADDRESS = "registeredAddress";
  @SerializedName(SERIALIZED_NAME_REGISTERED_ADDRESS)
  private VirtualAccountAddress registeredAddress;

  public static final String SERIALIZED_NAME_TRADING_ADDRESS = "tradingAddress";
  @SerializedName(SERIALIZED_NAME_TRADING_ADDRESS)
  private VirtualAccountAddress tradingAddress;

  public static final String SERIALIZED_NAME_CONTACT_NAME = "contactName";
  @SerializedName(SERIALIZED_NAME_CONTACT_NAME)
  private String contactName;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public VirtualAccountBusinessClient() { 
  }

  public VirtualAccountBusinessClient name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public VirtualAccountBusinessClient type(VirtualAccountClientBusinessType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VirtualAccountClientBusinessType getType() {
    return type;
  }


  public void setType(VirtualAccountClientBusinessType type) {
    this.type = type;
  }


  public VirtualAccountBusinessClient registrationNumber(String registrationNumber) {
    
    this.registrationNumber = registrationNumber;
    return this;
  }

   /**
   * Get registrationNumber
   * @return registrationNumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getRegistrationNumber() {
    return registrationNumber;
  }


  public void setRegistrationNumber(String registrationNumber) {
    this.registrationNumber = registrationNumber;
  }


  public VirtualAccountBusinessClient registeredAddress(VirtualAccountAddress registeredAddress) {
    
    this.registeredAddress = registeredAddress;
    return this;
  }

   /**
   * Get registeredAddress
   * @return registeredAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VirtualAccountAddress getRegisteredAddress() {
    return registeredAddress;
  }


  public void setRegisteredAddress(VirtualAccountAddress registeredAddress) {
    this.registeredAddress = registeredAddress;
  }


  public VirtualAccountBusinessClient tradingAddress(VirtualAccountAddress tradingAddress) {
    
    this.tradingAddress = tradingAddress;
    return this;
  }

   /**
   * Get tradingAddress
   * @return tradingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VirtualAccountAddress getTradingAddress() {
    return tradingAddress;
  }


  public void setTradingAddress(VirtualAccountAddress tradingAddress) {
    this.tradingAddress = tradingAddress;
  }


  public VirtualAccountBusinessClient contactName(String contactName) {
    
    this.contactName = contactName;
    return this;
  }

   /**
   * Get contactName
   * @return contactName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getContactName() {
    return contactName;
  }


  public void setContactName(String contactName) {
    this.contactName = contactName;
  }


  public VirtualAccountBusinessClient email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public VirtualAccountBusinessClient phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    this.phone = phone;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualAccountBusinessClient virtualAccountBusinessClient = (VirtualAccountBusinessClient) o;
    return Objects.equals(this.name, virtualAccountBusinessClient.name) &&
        Objects.equals(this.type, virtualAccountBusinessClient.type) &&
        Objects.equals(this.registrationNumber, virtualAccountBusinessClient.registrationNumber) &&
        Objects.equals(this.registeredAddress, virtualAccountBusinessClient.registeredAddress) &&
        Objects.equals(this.tradingAddress, virtualAccountBusinessClient.tradingAddress) &&
        Objects.equals(this.contactName, virtualAccountBusinessClient.contactName) &&
        Objects.equals(this.email, virtualAccountBusinessClient.email) &&
        Objects.equals(this.phone, virtualAccountBusinessClient.phone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, registrationNumber, registeredAddress, tradingAddress, contactName, email, phone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualAccountBusinessClient {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    registrationNumber: ").append(toIndentedString(registrationNumber)).append("\n");
    sb.append("    registeredAddress: ").append(toIndentedString(registeredAddress)).append("\n");
    sb.append("    tradingAddress: ").append(toIndentedString(tradingAddress)).append("\n");
    sb.append("    contactName: ").append(toIndentedString(contactName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

