/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.starter.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.LocalDate;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Terminated transaction stream generated as part of the financial profile for a User.
 */
@ApiModel(description = "Terminated transaction stream generated as part of the financial profile for a User.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class TerminatedTransactionStream {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TRANSACTIONS = "transactions";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONS)
  private List<EnrichedTransaction> transactions = null;

  public static final String SERIALIZED_NAME_TRANSACTION_SCHEDULE = "transactionSchedule";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_SCHEDULE)
  private TransactionSchedule transactionSchedule;

  public static final String SERIALIZED_NAME_SCHEDULE_CONSISTENCY_SCORE = "scheduleConsistencyScore";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_CONSISTENCY_SCORE)
  private BigDecimal scheduleConsistencyScore;

  public static final String SERIALIZED_NAME_NEXT_EXPECTED_TRANSACTION_DATE = "nextExpectedTransactionDate";
  @SerializedName(SERIALIZED_NAME_NEXT_EXPECTED_TRANSACTION_DATE)
  private LocalDate nextExpectedTransactionDate;

  public static final String SERIALIZED_NAME_EARLIEST_TRANSACTION_DATE = "earliestTransactionDate";
  @SerializedName(SERIALIZED_NAME_EARLIEST_TRANSACTION_DATE)
  private LocalDate earliestTransactionDate;

  public static final String SERIALIZED_NAME_MOST_RECENT_TRANSACTION_DATE = "mostRecentTransactionDate";
  @SerializedName(SERIALIZED_NAME_MOST_RECENT_TRANSACTION_DATE)
  private LocalDate mostRecentTransactionDate;

  public static final String SERIALIZED_NAME_AMOUNT_CONSISTENCY_SCORE = "amountConsistencyScore";
  @SerializedName(SERIALIZED_NAME_AMOUNT_CONSISTENCY_SCORE)
  private BigDecimal amountConsistencyScore;

  public static final String SERIALIZED_NAME_AVERAGE_AMOUNT = "averageAmount";
  @SerializedName(SERIALIZED_NAME_AVERAGE_AMOUNT)
  private BigDecimal averageAmount;

  public static final String SERIALIZED_NAME_MISSED_TRANSACTIONS = "missedTransactions";
  @SerializedName(SERIALIZED_NAME_MISSED_TRANSACTIONS)
  private Integer missedTransactions;

  public TerminatedTransactionStream() { 
  }

  public TerminatedTransactionStream name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the TransactionStream
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Amazon Marketplace", value = "The name of the TransactionStream")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public TerminatedTransactionStream transactions(List<EnrichedTransaction> transactions) {
    
    this.transactions = transactions;
    return this;
  }

  public TerminatedTransactionStream addTransactionsItem(EnrichedTransaction transactionsItem) {
    if (this.transactions == null) {
      this.transactions = new ArrayList<EnrichedTransaction>();
    }
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * A list of Transactions from the transaction stream.
   * @return transactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of Transactions from the transaction stream.")

  public List<EnrichedTransaction> getTransactions() {
    return transactions;
  }


  public void setTransactions(List<EnrichedTransaction> transactions) {
    this.transactions = transactions;
  }


  public TerminatedTransactionStream transactionSchedule(TransactionSchedule transactionSchedule) {
    
    this.transactionSchedule = transactionSchedule;
    return this;
  }

   /**
   * Get transactionSchedule
   * @return transactionSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TransactionSchedule getTransactionSchedule() {
    return transactionSchedule;
  }


  public void setTransactionSchedule(TransactionSchedule transactionSchedule) {
    this.transactionSchedule = transactionSchedule;
  }


  public TerminatedTransactionStream scheduleConsistencyScore(BigDecimal scheduleConsistencyScore) {
    
    this.scheduleConsistencyScore = scheduleConsistencyScore;
    return this;
  }

   /**
   * The consistency of the transaction.  This is a number between 0 and 1 with 1 being the most consistent schedule.
   * @return scheduleConsistencyScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.44", value = "The consistency of the transaction.  This is a number between 0 and 1 with 1 being the most consistent schedule.")

  public BigDecimal getScheduleConsistencyScore() {
    return scheduleConsistencyScore;
  }


  public void setScheduleConsistencyScore(BigDecimal scheduleConsistencyScore) {
    this.scheduleConsistencyScore = scheduleConsistencyScore;
  }


  public TerminatedTransactionStream nextExpectedTransactionDate(LocalDate nextExpectedTransactionDate) {
    
    this.nextExpectedTransactionDate = nextExpectedTransactionDate;
    return this;
  }

   /**
   * When is the transaction expected to occur next.
   * @return nextExpectedTransactionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Fri Oct 04 01:00:00 BST 2019", value = "When is the transaction expected to occur next.")

  public LocalDate getNextExpectedTransactionDate() {
    return nextExpectedTransactionDate;
  }


  public void setNextExpectedTransactionDate(LocalDate nextExpectedTransactionDate) {
    this.nextExpectedTransactionDate = nextExpectedTransactionDate;
  }


  public TerminatedTransactionStream earliestTransactionDate(LocalDate earliestTransactionDate) {
    
    this.earliestTransactionDate = earliestTransactionDate;
    return this;
  }

   /**
   * When is the first recorded transaction date
   * @return earliestTransactionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Fri Apr 24 01:00:00 BST 2020", value = "When is the first recorded transaction date")

  public LocalDate getEarliestTransactionDate() {
    return earliestTransactionDate;
  }


  public void setEarliestTransactionDate(LocalDate earliestTransactionDate) {
    this.earliestTransactionDate = earliestTransactionDate;
  }


  public TerminatedTransactionStream mostRecentTransactionDate(LocalDate mostRecentTransactionDate) {
    
    this.mostRecentTransactionDate = mostRecentTransactionDate;
    return this;
  }

   /**
   * When is the most recent transaction date
   * @return mostRecentTransactionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Thu Oct 03 01:00:00 BST 2019", value = "When is the most recent transaction date")

  public LocalDate getMostRecentTransactionDate() {
    return mostRecentTransactionDate;
  }


  public void setMostRecentTransactionDate(LocalDate mostRecentTransactionDate) {
    this.mostRecentTransactionDate = mostRecentTransactionDate;
  }


  public TerminatedTransactionStream amountConsistencyScore(BigDecimal amountConsistencyScore) {
    
    this.amountConsistencyScore = amountConsistencyScore;
    return this;
  }

   /**
   * The consistency of the amount of the transaction.  This is a number between 0 and 1 with 1 being the most consistent amount.
   * @return amountConsistencyScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.74", value = "The consistency of the amount of the transaction.  This is a number between 0 and 1 with 1 being the most consistent amount.")

  public BigDecimal getAmountConsistencyScore() {
    return amountConsistencyScore;
  }


  public void setAmountConsistencyScore(BigDecimal amountConsistencyScore) {
    this.amountConsistencyScore = amountConsistencyScore;
  }


  public TerminatedTransactionStream averageAmount(BigDecimal averageAmount) {
    
    this.averageAmount = averageAmount;
    return this;
  }

   /**
   * The average amount of the transaction stream
   * @return averageAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "19.708", value = "The average amount of the transaction stream")

  public BigDecimal getAverageAmount() {
    return averageAmount;
  }


  public void setAverageAmount(BigDecimal averageAmount) {
    this.averageAmount = averageAmount;
  }


  public TerminatedTransactionStream missedTransactions(Integer missedTransactions) {
    
    this.missedTransactions = missedTransactions;
    return this;
  }

   /**
   * Missed transactions of transaction stream
   * @return missedTransactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Missed transactions of transaction stream")

  public Integer getMissedTransactions() {
    return missedTransactions;
  }


  public void setMissedTransactions(Integer missedTransactions) {
    this.missedTransactions = missedTransactions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerminatedTransactionStream terminatedTransactionStream = (TerminatedTransactionStream) o;
    return Objects.equals(this.name, terminatedTransactionStream.name) &&
        Objects.equals(this.transactions, terminatedTransactionStream.transactions) &&
        Objects.equals(this.transactionSchedule, terminatedTransactionStream.transactionSchedule) &&
        Objects.equals(this.scheduleConsistencyScore, terminatedTransactionStream.scheduleConsistencyScore) &&
        Objects.equals(this.nextExpectedTransactionDate, terminatedTransactionStream.nextExpectedTransactionDate) &&
        Objects.equals(this.earliestTransactionDate, terminatedTransactionStream.earliestTransactionDate) &&
        Objects.equals(this.mostRecentTransactionDate, terminatedTransactionStream.mostRecentTransactionDate) &&
        Objects.equals(this.amountConsistencyScore, terminatedTransactionStream.amountConsistencyScore) &&
        Objects.equals(this.averageAmount, terminatedTransactionStream.averageAmount) &&
        Objects.equals(this.missedTransactions, terminatedTransactionStream.missedTransactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, transactions, transactionSchedule, scheduleConsistencyScore, nextExpectedTransactionDate, earliestTransactionDate, mostRecentTransactionDate, amountConsistencyScore, averageAmount, missedTransactions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerminatedTransactionStream {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    transactionSchedule: ").append(toIndentedString(transactionSchedule)).append("\n");
    sb.append("    scheduleConsistencyScore: ").append(toIndentedString(scheduleConsistencyScore)).append("\n");
    sb.append("    nextExpectedTransactionDate: ").append(toIndentedString(nextExpectedTransactionDate)).append("\n");
    sb.append("    earliestTransactionDate: ").append(toIndentedString(earliestTransactionDate)).append("\n");
    sb.append("    mostRecentTransactionDate: ").append(toIndentedString(mostRecentTransactionDate)).append("\n");
    sb.append("    amountConsistencyScore: ").append(toIndentedString(amountConsistencyScore)).append("\n");
    sb.append("    averageAmount: ").append(toIndentedString(averageAmount)).append("\n");
    sb.append("    missedTransactions: ").append(toIndentedString(missedTransactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

