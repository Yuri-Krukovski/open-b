/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.starter.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * NonSweepingPeriodicLimits
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class NonSweepingPeriodicLimits {
  public static final String SERIALIZED_NAME_TOTAL_MAX_AMOUNT = "totalMaxAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_MAX_AMOUNT)
  private Amount totalMaxAmount;

  public static final String SERIALIZED_NAME_FREQUENCY = "frequency";
  @SerializedName(SERIALIZED_NAME_FREQUENCY)
  private String frequency;

  public static final String SERIALIZED_NAME_ALIGNMENT = "alignment";
  @SerializedName(SERIALIZED_NAME_ALIGNMENT)
  private String alignment;

  public static final String SERIALIZED_NAME_MAX_NUMBER_OF_PAYMENTS = "maxNumberOfPayments";
  @SerializedName(SERIALIZED_NAME_MAX_NUMBER_OF_PAYMENTS)
  private Integer maxNumberOfPayments;

  public NonSweepingPeriodicLimits() { 
  }

  public NonSweepingPeriodicLimits totalMaxAmount(Amount totalMaxAmount) {
    
    this.totalMaxAmount = totalMaxAmount;
    return this;
  }

   /**
   * __Mandatory__. Maximum amount that can be specified in all payment instructions in a given period under this VRP consent. If the Alignment is Calendar, the limit is pro-rated in the first period to the remaining number of days.
   * @return totalMaxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "__Mandatory__. Maximum amount that can be specified in all payment instructions in a given period under this VRP consent. If the Alignment is Calendar, the limit is pro-rated in the first period to the remaining number of days.")

  public Amount getTotalMaxAmount() {
    return totalMaxAmount;
  }


  public void setTotalMaxAmount(Amount totalMaxAmount) {
    this.totalMaxAmount = totalMaxAmount;
  }


  public NonSweepingPeriodicLimits frequency(String frequency) {
    
    this.frequency = frequency;
    return this;
  }

   /**
   * __Mandatory__. Frequency for which the payment limits are enforced. Allowed values are [DAILY, WEEKLY, FORTNIGHTLY, MONTHLY, YEARLY].
   * @return frequency
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "__Mandatory__. Frequency for which the payment limits are enforced. Allowed values are [DAILY, WEEKLY, FORTNIGHTLY, MONTHLY, YEARLY].")

  public String getFrequency() {
    return frequency;
  }


  public void setFrequency(String frequency) {
    this.frequency = frequency;
  }


  public NonSweepingPeriodicLimits alignment(String alignment) {
    
    this.alignment = alignment;
    return this;
  }

   /**
   * __Mandatory__. Period alignment for which the payment limits are enforced. Allowed values are [CONSENT, CALENDAR]. If CONSENT, then period starts on consent creation date. If CALENDAR, then period lines up with the frequency e.g. WEEKLY period will begin at start of the week in question.
   * @return alignment
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "__Mandatory__. Period alignment for which the payment limits are enforced. Allowed values are [CONSENT, CALENDAR]. If CONSENT, then period starts on consent creation date. If CALENDAR, then period lines up with the frequency e.g. WEEKLY period will begin at start of the week in question.")

  public String getAlignment() {
    return alignment;
  }


  public void setAlignment(String alignment) {
    this.alignment = alignment;
  }


  public NonSweepingPeriodicLimits maxNumberOfPayments(Integer maxNumberOfPayments) {
    
    this.maxNumberOfPayments = maxNumberOfPayments;
    return this;
  }

   /**
   * __Optional__. Max number of payments that can be submitted under this period.
   * @return maxNumberOfPayments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "__Optional__. Max number of payments that can be submitted under this period.")

  public Integer getMaxNumberOfPayments() {
    return maxNumberOfPayments;
  }


  public void setMaxNumberOfPayments(Integer maxNumberOfPayments) {
    this.maxNumberOfPayments = maxNumberOfPayments;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NonSweepingPeriodicLimits nonSweepingPeriodicLimits = (NonSweepingPeriodicLimits) o;
    return Objects.equals(this.totalMaxAmount, nonSweepingPeriodicLimits.totalMaxAmount) &&
        Objects.equals(this.frequency, nonSweepingPeriodicLimits.frequency) &&
        Objects.equals(this.alignment, nonSweepingPeriodicLimits.alignment) &&
        Objects.equals(this.maxNumberOfPayments, nonSweepingPeriodicLimits.maxNumberOfPayments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalMaxAmount, frequency, alignment, maxNumberOfPayments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NonSweepingPeriodicLimits {\n");
    sb.append("    totalMaxAmount: ").append(toIndentedString(totalMaxAmount)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    alignment: ").append(toIndentedString(alignment)).append("\n");
    sb.append("    maxNumberOfPayments: ").append(toIndentedString(maxNumberOfPayments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

