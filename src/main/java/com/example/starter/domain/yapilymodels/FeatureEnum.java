/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.starter.domain.yapilymodels;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
 * Used to describe what functions are supported by the associated &#x60;Institution&#x60;.        &lt;br&gt;&lt;br&gt;For more information on each feature, see the following links:        &lt;ul&gt;          &lt;li&gt;[Financial Data Features](https://docs.yapily.com/pages/key-concepts/account-data/account-features/)&lt;/li&gt;          &lt;li&gt;[Payments Features](https://docs.yapily.com/pages/key-concepts/payments/payment-features/)&lt;/li&gt;        &lt;/ul&gt;
 */
@JsonAdapter(FeatureEnum.Adapter.class)
public enum FeatureEnum {
  
  INITIATE_PRE_AUTHORISATION("INITIATE_PRE_AUTHORISATION"),
  
  INITIATE_PRE_AUTHORISATION_ACCOUNTS("INITIATE_PRE_AUTHORISATION_ACCOUNTS"),
  
  INITIATE_PRE_AUTHORISATION_PAYMENTS("INITIATE_PRE_AUTHORISATION_PAYMENTS"),
  
  INITIATE_ACCOUNT_REQUEST("INITIATE_ACCOUNT_REQUEST"),
  
  INITIATE_EMBEDDED_ACCOUNT_REQUEST("INITIATE_EMBEDDED_ACCOUNT_REQUEST"),
  
  ACCOUNT_REQUEST_DETAILS("ACCOUNT_REQUEST_DETAILS"),
  
  ACCOUNTS("ACCOUNTS"),
  
  ACCOUNT("ACCOUNT"),
  
  ACCOUNT_TRANSACTIONS("ACCOUNT_TRANSACTIONS"),
  
  ACCOUNT_STATEMENTS("ACCOUNT_STATEMENTS"),
  
  ACCOUNT_STATEMENT("ACCOUNT_STATEMENT"),
  
  ACCOUNT_STATEMENT_FILE("ACCOUNT_STATEMENT_FILE"),
  
  ACCOUNT_SCHEDULED_PAYMENTS("ACCOUNT_SCHEDULED_PAYMENTS"),
  
  ACCOUNT_DIRECT_DEBITS("ACCOUNT_DIRECT_DEBITS"),
  
  ACCOUNT_PERIODIC_PAYMENTS("ACCOUNT_PERIODIC_PAYMENTS"),
  
  ACCOUNT_TRANSACTIONS_WITH_MERCHANT("ACCOUNT_TRANSACTIONS_WITH_MERCHANT"),
  
  IDENTITY("IDENTITY"),
  
  ACCOUNTS_WITHOUT_BALANCE("ACCOUNTS_WITHOUT_BALANCE"),
  
  ACCOUNT_WITHOUT_BALANCE("ACCOUNT_WITHOUT_BALANCE"),
  
  ACCOUNT_BALANCES("ACCOUNT_BALANCES"),
  
  INITIATE_SINGLE_PAYMENT_SORTCODE("INITIATE_SINGLE_PAYMENT_SORTCODE"),
  
  EXISTING_PAYMENT_INITIATION_DETAILS("EXISTING_PAYMENT_INITIATION_DETAILS"),
  
  CREATE_SINGLE_PAYMENT_SORTCODE("CREATE_SINGLE_PAYMENT_SORTCODE"),
  
  EXISTING_PAYMENTS_DETAILS("EXISTING_PAYMENTS_DETAILS"),
  
  INITIATE_DOMESTIC_SINGLE_PAYMENT("INITIATE_DOMESTIC_SINGLE_PAYMENT"),
  
  INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT("INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT"),
  
  CREATE_DOMESTIC_SINGLE_PAYMENT("CREATE_DOMESTIC_SINGLE_PAYMENT"),
  
  INITIATE_EMBEDDED_BULK_PAYMENT("INITIATE_EMBEDDED_BULK_PAYMENT"),
  
  INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT("INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT"),
  
  CREATE_DOMESTIC_SINGLE_INSTANT_PAYMENT("CREATE_DOMESTIC_SINGLE_INSTANT_PAYMENT"),
  
  INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT("INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT"),
  
  CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT("CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT"),
  
  INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING("INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING"),
  
  INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING("INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING"),
  
  CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING("CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING"),
  
  CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING("CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING"),
  
  INITIATE_DOMESTIC_SCHEDULED_PAYMENT("INITIATE_DOMESTIC_SCHEDULED_PAYMENT"),
  
  CREATE_DOMESTIC_SCHEDULED_PAYMENT("CREATE_DOMESTIC_SCHEDULED_PAYMENT"),
  
  INITIATE_DOMESTIC_PERIODIC_PAYMENT("INITIATE_DOMESTIC_PERIODIC_PAYMENT"),
  
  CREATE_DOMESTIC_PERIODIC_PAYMENT("CREATE_DOMESTIC_PERIODIC_PAYMENT"),
  
  PERIODIC_PAYMENT_FREQUENCY_EXTENDED("PERIODIC_PAYMENT_FREQUENCY_EXTENDED"),
  
  INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT("INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT"),
  
  CREATE_INTERNATIONAL_SCHEDULED_PAYMENT("CREATE_INTERNATIONAL_SCHEDULED_PAYMENT"),
  
  INITIATE_INTERNATIONAL_PERIODIC_PAYMENT("INITIATE_INTERNATIONAL_PERIODIC_PAYMENT"),
  
  CREATE_INTERNATIONAL_PERIODIC_PAYMENT("CREATE_INTERNATIONAL_PERIODIC_PAYMENT"),
  
  INITIATE_INTERNATIONAL_SINGLE_PAYMENT("INITIATE_INTERNATIONAL_SINGLE_PAYMENT"),
  
  CREATE_INTERNATIONAL_SINGLE_PAYMENT("CREATE_INTERNATIONAL_SINGLE_PAYMENT"),
  
  INITIATE_BULK_PAYMENT("INITIATE_BULK_PAYMENT"),
  
  CREATE_BULK_PAYMENT("CREATE_BULK_PAYMENT"),
  
  TRANSFER("TRANSFER"),
  
  OPEN_DATA_PERSONAL_CURRENT_ACCOUNTS("OPEN_DATA_PERSONAL_CURRENT_ACCOUNTS"),
  
  OPEN_DATA_ATMS("OPEN_DATA_ATMS"),
  
  READ_DOMESTIC_SINGLE_REFUND("READ_DOMESTIC_SINGLE_REFUND"),
  
  READ_DOMESTIC_SCHEDULED_REFUND("READ_DOMESTIC_SCHEDULED_REFUND"),
  
  READ_DOMESTIC_PERIODIC_PAYMENT_REFUND("READ_DOMESTIC_PERIODIC_PAYMENT_REFUND"),
  
  READ_INTERNATIONAL_SINGLE_REFUND("READ_INTERNATIONAL_SINGLE_REFUND"),
  
  READ_INTERNATIONAL_SCHEDULED_REFUND("READ_INTERNATIONAL_SCHEDULED_REFUND"),
  
  ACCOUNT_BENEFICIARIES("ACCOUNT_BENEFICIARIES"),
  
  INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS("INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS"),
  
  INITIATE_ONETIME_PRE_AUTHORISATION_ACCOUNTS("INITIATE_ONETIME_PRE_AUTHORISATION_ACCOUNTS"),
  
  INITIATE_ONETIME_PRE_AUTHORISATION("INITIATE_ONETIME_PRE_AUTHORISATION"),
  
  VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION("VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION");

  private String value;

  FeatureEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static FeatureEnum fromValue(String value) {
    for (FeatureEnum b : FeatureEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<FeatureEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final FeatureEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public FeatureEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return FeatureEnum.fromValue(value);
    }
  }
}

