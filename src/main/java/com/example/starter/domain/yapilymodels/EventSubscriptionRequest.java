/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.starter.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * EventSubscriptionRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class EventSubscriptionRequest {
  public static final String SERIALIZED_NAME_EVENT_TYPE_ID = "eventTypeId";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE_ID)
  private String eventTypeId;

  public static final String SERIALIZED_NAME_NOTIFICATION = "notification";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION)
  private Notification notification;

  public EventSubscriptionRequest() { 
  }

  public EventSubscriptionRequest eventTypeId(String eventTypeId) {
    
    this.eventTypeId = eventTypeId;
    return this;
  }

   /**
   * Unique identifier of the event type (for which notifications will be sent)
   * @return eventTypeId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "payment.status.completed", required = true, value = "Unique identifier of the event type (for which notifications will be sent)")

  public String getEventTypeId() {
    return eventTypeId;
  }


  public void setEventTypeId(String eventTypeId) {
    this.eventTypeId = eventTypeId;
  }


  public EventSubscriptionRequest notification(Notification notification) {
    
    this.notification = notification;
    return this;
  }

   /**
   * Get notification
   * @return notification
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Notification getNotification() {
    return notification;
  }


  public void setNotification(Notification notification) {
    this.notification = notification;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventSubscriptionRequest eventSubscriptionRequest = (EventSubscriptionRequest) o;
    return Objects.equals(this.eventTypeId, eventSubscriptionRequest.eventTypeId) &&
        Objects.equals(this.notification, eventSubscriptionRequest.notification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventTypeId, notification);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventSubscriptionRequest {\n");
    sb.append("    eventTypeId: ").append(toIndentedString(eventTypeId)).append("\n");
    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

