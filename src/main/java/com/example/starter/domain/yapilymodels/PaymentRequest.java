/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.starter.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * __Mandatory__. The payment request object defining the details of the payment.
 */
@ApiModel(description = "__Mandatory__. The payment request object defining the details of the payment.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class PaymentRequest {
  public static final String SERIALIZED_NAME_PAYMENT_IDEMPOTENCY_ID = "paymentIdempotencyId";
  @SerializedName(SERIALIZED_NAME_PAYMENT_IDEMPOTENCY_ID)
  private String paymentIdempotencyId;

  public static final String SERIALIZED_NAME_PAYER = "payer";
  @SerializedName(SERIALIZED_NAME_PAYER)
  private Payer payer;

  public static final String SERIALIZED_NAME_REFERENCE = "reference";
  @SerializedName(SERIALIZED_NAME_REFERENCE)
  private String reference;

  public static final String SERIALIZED_NAME_CONTEXT_TYPE = "contextType";
  @SerializedName(SERIALIZED_NAME_CONTEXT_TYPE)
  private PaymentContextType contextType = PaymentContextType.OTHER;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private PaymentType type;

  public static final String SERIALIZED_NAME_PAYEE = "payee";
  @SerializedName(SERIALIZED_NAME_PAYEE)
  private Payee payee;

  public static final String SERIALIZED_NAME_PERIODIC_PAYMENT = "periodicPayment";
  @SerializedName(SERIALIZED_NAME_PERIODIC_PAYMENT)
  private PeriodicPaymentRequest periodicPayment;

  public static final String SERIALIZED_NAME_INTERNATIONAL_PAYMENT = "internationalPayment";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_PAYMENT)
  private InternationalPaymentRequest internationalPayment;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Amount amount;

  public static final String SERIALIZED_NAME_PAYMENT_DATE_TIME = "paymentDateTime";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DATE_TIME)
  private OffsetDateTime paymentDateTime;

  public static final String SERIALIZED_NAME_READ_REFUND_ACCOUNT = "readRefundAccount";
  @SerializedName(SERIALIZED_NAME_READ_REFUND_ACCOUNT)
  private Boolean readRefundAccount;

  public PaymentRequest() { 
  }

  public PaymentRequest paymentIdempotencyId(String paymentIdempotencyId) {
    
    this.paymentIdempotencyId = paymentIdempotencyId;
    return this;
  }

   /**
   * __Mandatory__. A unique identifier that you must provide to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters.
   * @return paymentIdempotencyId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "04ab4536gaerfc0e1f93c4f4", required = true, value = "__Mandatory__. A unique identifier that you must provide to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters.")

  public String getPaymentIdempotencyId() {
    return paymentIdempotencyId;
  }


  public void setPaymentIdempotencyId(String paymentIdempotencyId) {
    this.paymentIdempotencyId = paymentIdempotencyId;
  }


  public PaymentRequest payer(Payer payer) {
    
    this.payer = payer;
    return this;
  }

   /**
   * Get payer
   * @return payer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Payer getPayer() {
    return payer;
  }


  public void setPayer(Payer payer) {
    this.payer = payer;
  }


  public PaymentRequest reference(String reference) {
    
    this.reference = reference;
    return this;
  }

   /**
   * __Optional__. The payment reference or description. Limited to a maximum of 18 characters long.
   * @return reference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Bill payment", value = "__Optional__. The payment reference or description. Limited to a maximum of 18 characters long.")

  public String getReference() {
    return reference;
  }


  public void setReference(String reference) {
    this.reference = reference;
  }


  public PaymentRequest contextType(PaymentContextType contextType) {
    
    this.contextType = contextType;
    return this;
  }

   /**
   * Get contextType
   * @return contextType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaymentContextType getContextType() {
    return contextType;
  }


  public void setContextType(PaymentContextType contextType) {
    this.contextType = contextType;
  }


  public PaymentRequest type(PaymentType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public PaymentType getType() {
    return type;
  }


  public void setType(PaymentType type) {
    this.type = type;
  }


  public PaymentRequest payee(Payee payee) {
    
    this.payee = payee;
    return this;
  }

   /**
   * Get payee
   * @return payee
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Payee getPayee() {
    return payee;
  }


  public void setPayee(Payee payee) {
    this.payee = payee;
  }


  public PaymentRequest periodicPayment(PeriodicPaymentRequest periodicPayment) {
    
    this.periodicPayment = periodicPayment;
    return this;
  }

   /**
   * Get periodicPayment
   * @return periodicPayment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PeriodicPaymentRequest getPeriodicPayment() {
    return periodicPayment;
  }


  public void setPeriodicPayment(PeriodicPaymentRequest periodicPayment) {
    this.periodicPayment = periodicPayment;
  }


  public PaymentRequest internationalPayment(InternationalPaymentRequest internationalPayment) {
    
    this.internationalPayment = internationalPayment;
    return this;
  }

   /**
   * Get internationalPayment
   * @return internationalPayment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InternationalPaymentRequest getInternationalPayment() {
    return internationalPayment;
  }


  public void setInternationalPayment(InternationalPaymentRequest internationalPayment) {
    this.internationalPayment = internationalPayment;
  }


  public PaymentRequest amount(Amount amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Amount getAmount() {
    return amount;
  }


  public void setAmount(Amount amount) {
    this.amount = amount;
  }


  public PaymentRequest paymentDateTime(OffsetDateTime paymentDateTime) {
    
    this.paymentDateTime = paymentDateTime;
    return this;
  }

   /**
   * __Conditional__. Used to specify the date of the payment when the payment type is one of the following:&lt;ul&gt;    &lt;li&gt;&lt;code&gt;DOMESTIC_SCHEDULED_PAYMENT&lt;/code&gt;&lt;/li&gt;    &lt;li&gt;&lt;code&gt;DOMESTIC_PERIODIC_PAYMENT&lt;/code&gt;&lt;/li&gt;    &lt;li&gt;&lt;code&gt;INTERNATIONAL_SCHEDULED_PAYMENT&lt;/code&gt;&lt;/li&gt;    &lt;li&gt;&lt;code&gt;INTERNATIONAL_PERIODIC_PAYMENT&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
   * @return paymentDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-07-21T17:32:28Z", value = "__Conditional__. Used to specify the date of the payment when the payment type is one of the following:<ul>    <li><code>DOMESTIC_SCHEDULED_PAYMENT</code></li>    <li><code>DOMESTIC_PERIODIC_PAYMENT</code></li>    <li><code>INTERNATIONAL_SCHEDULED_PAYMENT</code></li>    <li><code>INTERNATIONAL_PERIODIC_PAYMENT</code></li></ul>")

  public OffsetDateTime getPaymentDateTime() {
    return paymentDateTime;
  }


  public void setPaymentDateTime(OffsetDateTime paymentDateTime) {
    this.paymentDateTime = paymentDateTime;
  }


  public PaymentRequest readRefundAccount(Boolean readRefundAccount) {
    
    this.readRefundAccount = readRefundAccount;
    return this;
  }

   /**
   * __Optional__. Used to request the payer details in the payment response when the &#x60;Institution&#x60; provides the feature &#x60;READ_DOMESTIC_SINGLE_REFUND&#x60;.&lt;br&gt;&lt;br&gt;See [Reverse Payments](https://docs.yapily.com/pages/knowledge/open-banking/reverse_payments/) for more information.
   * @return readRefundAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "__Optional__. Used to request the payer details in the payment response when the `Institution` provides the feature `READ_DOMESTIC_SINGLE_REFUND`.<br><br>See [Reverse Payments](https://docs.yapily.com/pages/knowledge/open-banking/reverse_payments/) for more information.")

  public Boolean getReadRefundAccount() {
    return readRefundAccount;
  }


  public void setReadRefundAccount(Boolean readRefundAccount) {
    this.readRefundAccount = readRefundAccount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentRequest paymentRequest = (PaymentRequest) o;
    return Objects.equals(this.paymentIdempotencyId, paymentRequest.paymentIdempotencyId) &&
        Objects.equals(this.payer, paymentRequest.payer) &&
        Objects.equals(this.reference, paymentRequest.reference) &&
        Objects.equals(this.contextType, paymentRequest.contextType) &&
        Objects.equals(this.type, paymentRequest.type) &&
        Objects.equals(this.payee, paymentRequest.payee) &&
        Objects.equals(this.periodicPayment, paymentRequest.periodicPayment) &&
        Objects.equals(this.internationalPayment, paymentRequest.internationalPayment) &&
        Objects.equals(this.amount, paymentRequest.amount) &&
        Objects.equals(this.paymentDateTime, paymentRequest.paymentDateTime) &&
        Objects.equals(this.readRefundAccount, paymentRequest.readRefundAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentIdempotencyId, payer, reference, contextType, type, payee, periodicPayment, internationalPayment, amount, paymentDateTime, readRefundAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentRequest {\n");
    sb.append("    paymentIdempotencyId: ").append(toIndentedString(paymentIdempotencyId)).append("\n");
    sb.append("    payer: ").append(toIndentedString(payer)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    contextType: ").append(toIndentedString(contextType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    payee: ").append(toIndentedString(payee)).append("\n");
    sb.append("    periodicPayment: ").append(toIndentedString(periodicPayment)).append("\n");
    sb.append("    internationalPayment: ").append(toIndentedString(internationalPayment)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    paymentDateTime: ").append(toIndentedString(paymentDateTime)).append("\n");
    sb.append("    readRefundAccount: ").append(toIndentedString(readRefundAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

