/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.starter.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * IsoBankTransactionCode
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class IsoBankTransactionCode {
  public static final String SERIALIZED_NAME_DOMAIN_CODE = "domainCode";
  @SerializedName(SERIALIZED_NAME_DOMAIN_CODE)
  private IsoCodeDetails domainCode;

  public static final String SERIALIZED_NAME_FAMILY_CODE = "familyCode";
  @SerializedName(SERIALIZED_NAME_FAMILY_CODE)
  private IsoCodeDetails familyCode;

  public static final String SERIALIZED_NAME_SUB_FAMILY_CODE = "subFamilyCode";
  @SerializedName(SERIALIZED_NAME_SUB_FAMILY_CODE)
  private IsoCodeDetails subFamilyCode;

  public IsoBankTransactionCode() { 
  }

  public IsoBankTransactionCode domainCode(IsoCodeDetails domainCode) {
    
    this.domainCode = domainCode;
    return this;
  }

   /**
   * Get domainCode
   * @return domainCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IsoCodeDetails getDomainCode() {
    return domainCode;
  }


  public void setDomainCode(IsoCodeDetails domainCode) {
    this.domainCode = domainCode;
  }


  public IsoBankTransactionCode familyCode(IsoCodeDetails familyCode) {
    
    this.familyCode = familyCode;
    return this;
  }

   /**
   * Get familyCode
   * @return familyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IsoCodeDetails getFamilyCode() {
    return familyCode;
  }


  public void setFamilyCode(IsoCodeDetails familyCode) {
    this.familyCode = familyCode;
  }


  public IsoBankTransactionCode subFamilyCode(IsoCodeDetails subFamilyCode) {
    
    this.subFamilyCode = subFamilyCode;
    return this;
  }

   /**
   * Get subFamilyCode
   * @return subFamilyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IsoCodeDetails getSubFamilyCode() {
    return subFamilyCode;
  }


  public void setSubFamilyCode(IsoCodeDetails subFamilyCode) {
    this.subFamilyCode = subFamilyCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IsoBankTransactionCode isoBankTransactionCode = (IsoBankTransactionCode) o;
    return Objects.equals(this.domainCode, isoBankTransactionCode.domainCode) &&
        Objects.equals(this.familyCode, isoBankTransactionCode.familyCode) &&
        Objects.equals(this.subFamilyCode, isoBankTransactionCode.subFamilyCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domainCode, familyCode, subFamilyCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IsoBankTransactionCode {\n");
    sb.append("    domainCode: ").append(toIndentedString(domainCode)).append("\n");
    sb.append("    familyCode: ").append(toIndentedString(familyCode)).append("\n");
    sb.append("    subFamilyCode: ").append(toIndentedString(subFamilyCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

