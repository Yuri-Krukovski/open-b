/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ob.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * __Conditional__. Used to create a request for the balance of the account specified. Once the user authorises the request, only the balance can be obtained by executing [GET Account Balances](./#get-account-balances).&lt;br&gt;&lt;br&gt; This can be specified in conjunction with &#x60;accountIdentifiersForTransaction&#x60; to generate a &#x60;Consent&#x60; that can both access the accounts balance and transactions.
 */
@ApiModel(description = "__Conditional__. Used to create a request for the balance of the account specified. Once the user authorises the request, only the balance can be obtained by executing [GET Account Balances](./#get-account-balances).<br><br> This can be specified in conjunction with `accountIdentifiersForTransaction` to generate a `Consent` that can both access the accounts balance and transactions.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class AccountInfo {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ACCOUNT_IDENTIFICATION = "accountIdentification";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDENTIFICATION)
  private AccountIdentification accountIdentification;

  public AccountInfo() { 
  }

  public AccountInfo accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * __Mandatory__. Unique identifier of the account.
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "500000000000000000000001", required = true, value = "__Mandatory__. Unique identifier of the account.")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public AccountInfo accountIdentification(AccountIdentification accountIdentification) {
    
    this.accountIdentification = accountIdentification;
    return this;
  }

   /**
   * Get accountIdentification
   * @return accountIdentification
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public AccountIdentification getAccountIdentification() {
    return accountIdentification;
  }


  public void setAccountIdentification(AccountIdentification accountIdentification) {
    this.accountIdentification = accountIdentification;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountInfo accountInfo = (AccountInfo) o;
    return Objects.equals(this.accountId, accountInfo.accountId) &&
        Objects.equals(this.accountIdentification, accountInfo.accountIdentification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, accountIdentification);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountInfo {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    accountIdentification: ").append(toIndentedString(accountIdentification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

