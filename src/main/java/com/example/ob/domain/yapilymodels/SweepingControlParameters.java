/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ob.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Define the restrictions and limits for payment orders as part of Sweeping VRP consent
 */
@ApiModel(description = "Define the restrictions and limits for payment orders as part of Sweeping VRP consent")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class SweepingControlParameters {
  public static final String SERIALIZED_NAME_PSU_AUTHENTICATION_METHODS = "psuAuthenticationMethods";
  @SerializedName(SERIALIZED_NAME_PSU_AUTHENTICATION_METHODS)
  private List<String> psuAuthenticationMethods = new ArrayList<String>();

  public static final String SERIALIZED_NAME_PERIODIC_LIMITS = "periodicLimits";
  @SerializedName(SERIALIZED_NAME_PERIODIC_LIMITS)
  private List<SweepingPeriodicLimits> periodicLimits = new ArrayList<SweepingPeriodicLimits>();

  public static final String SERIALIZED_NAME_MAX_AMOUNT_PER_PAYMENT = "maxAmountPerPayment";
  @SerializedName(SERIALIZED_NAME_MAX_AMOUNT_PER_PAYMENT)
  private Amount maxAmountPerPayment;

  public static final String SERIALIZED_NAME_VALID_FROM = "validFrom";
  @SerializedName(SERIALIZED_NAME_VALID_FROM)
  private OffsetDateTime validFrom;

  public static final String SERIALIZED_NAME_VALID_TO = "validTo";
  @SerializedName(SERIALIZED_NAME_VALID_TO)
  private OffsetDateTime validTo;

  public SweepingControlParameters() { 
  }

  public SweepingControlParameters psuAuthenticationMethods(List<String> psuAuthenticationMethods) {
    
    this.psuAuthenticationMethods = psuAuthenticationMethods;
    return this;
  }

  public SweepingControlParameters addPsuAuthenticationMethodsItem(String psuAuthenticationMethodsItem) {
    this.psuAuthenticationMethods.add(psuAuthenticationMethodsItem);
    return this;
  }

   /**
   * __Mandatory__. Defines the authentication method(s) allowed in payment submission step. Allowed values are [SCA_REQUIRED, SCA_NOT_REQUIRED].
   * @return psuAuthenticationMethods
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "__Mandatory__. Defines the authentication method(s) allowed in payment submission step. Allowed values are [SCA_REQUIRED, SCA_NOT_REQUIRED].")

  public List<String> getPsuAuthenticationMethods() {
    return psuAuthenticationMethods;
  }


  public void setPsuAuthenticationMethods(List<String> psuAuthenticationMethods) {
    this.psuAuthenticationMethods = psuAuthenticationMethods;
  }


  public SweepingControlParameters periodicLimits(List<SweepingPeriodicLimits> periodicLimits) {
    
    this.periodicLimits = periodicLimits;
    return this;
  }

  public SweepingControlParameters addPeriodicLimitsItem(SweepingPeriodicLimits periodicLimitsItem) {
    this.periodicLimits.add(periodicLimitsItem);
    return this;
  }

   /**
   * Get periodicLimits
   * @return periodicLimits
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<SweepingPeriodicLimits> getPeriodicLimits() {
    return periodicLimits;
  }


  public void setPeriodicLimits(List<SweepingPeriodicLimits> periodicLimits) {
    this.periodicLimits = periodicLimits;
  }


  public SweepingControlParameters maxAmountPerPayment(Amount maxAmountPerPayment) {
    
    this.maxAmountPerPayment = maxAmountPerPayment;
    return this;
  }

   /**
   * __Mandatory__. Max amount that can be submitted per payment.
   * @return maxAmountPerPayment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "__Mandatory__. Max amount that can be submitted per payment.")

  public Amount getMaxAmountPerPayment() {
    return maxAmountPerPayment;
  }


  public void setMaxAmountPerPayment(Amount maxAmountPerPayment) {
    this.maxAmountPerPayment = maxAmountPerPayment;
  }


  public SweepingControlParameters validFrom(OffsetDateTime validFrom) {
    
    this.validFrom = validFrom;
    return this;
  }

   /**
   * __Optional__. Start date when the consent becomes valid.
   * @return validFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "__Optional__. Start date when the consent becomes valid.")

  public OffsetDateTime getValidFrom() {
    return validFrom;
  }


  public void setValidFrom(OffsetDateTime validFrom) {
    this.validFrom = validFrom;
  }


  public SweepingControlParameters validTo(OffsetDateTime validTo) {
    
    this.validTo = validTo;
    return this;
  }

   /**
   * __Optional__. End date when the consent expires and becomes invalid.
   * @return validTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "__Optional__. End date when the consent expires and becomes invalid.")

  public OffsetDateTime getValidTo() {
    return validTo;
  }


  public void setValidTo(OffsetDateTime validTo) {
    this.validTo = validTo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SweepingControlParameters sweepingControlParameters = (SweepingControlParameters) o;
    return Objects.equals(this.psuAuthenticationMethods, sweepingControlParameters.psuAuthenticationMethods) &&
        Objects.equals(this.periodicLimits, sweepingControlParameters.periodicLimits) &&
        Objects.equals(this.maxAmountPerPayment, sweepingControlParameters.maxAmountPerPayment) &&
        Objects.equals(this.validFrom, sweepingControlParameters.validFrom) &&
        Objects.equals(this.validTo, sweepingControlParameters.validTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(psuAuthenticationMethods, periodicLimits, maxAmountPerPayment, validFrom, validTo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SweepingControlParameters {\n");
    sb.append("    psuAuthenticationMethods: ").append(toIndentedString(psuAuthenticationMethods)).append("\n");
    sb.append("    periodicLimits: ").append(toIndentedString(periodicLimits)).append("\n");
    sb.append("    maxAmountPerPayment: ").append(toIndentedString(maxAmountPerPayment)).append("\n");
    sb.append("    validFrom: ").append(toIndentedString(validFrom)).append("\n");
    sb.append("    validTo: ").append(toIndentedString(validTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

