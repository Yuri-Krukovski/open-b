/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ob.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.*;

/**
 * __Conditional__. Used to further specify details of the &#x60;Consent&#x60; to request &lt;br&gt;&lt;br&gt;Conditions:&lt;ol&gt;&lt;li&gt;Mandatory to access balance/transaction data for an &#x60;Institution&#x60; within the [CBI Globe](https://docs.yapily.com/pages/knowledge/open-banking/cbi_globe/)&lt;/li&gt;&lt;li&gt;Mandatory to specify the individual scopes to request from the user at the &#x60;Institution&#x60; for an account authorisation&lt;/li&gt;&lt;li&gt;Mandatory to specify an expiry time on the created &#x60;Consent&#x60; at which time will render it unusable&lt;/li&gt;&lt;li&gt;Mandatory to specify the date range that the created &#x60;Consent&#x60; will be able to access transactions for (given the range is support for the &#x60;Institution&#x60;)&lt;/li&gt;&lt;/ol&gt;
 */
@ApiModel(description = "__Conditional__. Used to further specify details of the `Consent` to request <br><br>Conditions:<ol><li>Mandatory to access balance/transaction data for an `Institution` within the [CBI Globe](https://docs.yapily.com/pages/knowledge/open-banking/cbi_globe/)</li><li>Mandatory to specify the individual scopes to request from the user at the `Institution` for an account authorisation</li><li>Mandatory to specify an expiry time on the created `Consent` at which time will render it unusable</li><li>Mandatory to specify the date range that the created `Consent` will be able to access transactions for (given the range is support for the `Institution`)</li></ol>")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class AccountRequest {
  public static final String SERIALIZED_NAME_TRANSACTION_FROM = "transactionFrom";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_FROM)
  private OffsetDateTime transactionFrom;

  public static final String SERIALIZED_NAME_TRANSACTION_TO = "transactionTo";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_TO)
  private OffsetDateTime transactionTo;

  public static final String SERIALIZED_NAME_EXPIRES_AT = "expiresAt";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT)
  private OffsetDateTime expiresAt;

  public static final String SERIALIZED_NAME_ACCOUNT_IDENTIFIERS = "accountIdentifiers";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDENTIFIERS)
  private AccountInfo accountIdentifiers;

  public static final String SERIALIZED_NAME_ACCOUNT_IDENTIFIERS_FOR_TRANSACTION = "accountIdentifiersForTransaction";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDENTIFIERS_FOR_TRANSACTION)
  private List<AccountInfo> accountIdentifiersForTransaction = null;

  public static final String SERIALIZED_NAME_ACCOUNT_IDENTIFIERS_FOR_BALANCE = "accountIdentifiersForBalance";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDENTIFIERS_FOR_BALANCE)
  private List<AccountInfo> accountIdentifiersForBalance = null;

  public static final String SERIALIZED_NAME_FEATURE_SCOPE = "featureScope";
  @SerializedName(SERIALIZED_NAME_FEATURE_SCOPE)
  private Set<FeatureEnum> featureScope = null;

  public AccountRequest() { 
  }

  public AccountRequest transactionFrom(OffsetDateTime transactionFrom) {
    
    this.transactionFrom = transactionFrom;
    return this;
  }

   /**
   * __Optional__. Used to specify the lower bound on when to pull transaction. This should be declared when accessing transaction older than 90 days for banks in the [CBI Globe](https://docs.yapily.com/pages/knowledge/open-banking/cbi_globe/).
   * @return transactionFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-01-01T00:00Z", value = "__Optional__. Used to specify the lower bound on when to pull transaction. This should be declared when accessing transaction older than 90 days for banks in the [CBI Globe](https://docs.yapily.com/pages/knowledge/open-banking/cbi_globe/).")

  public OffsetDateTime getTransactionFrom() {
    return transactionFrom;
  }


  public void setTransactionFrom(OffsetDateTime transactionFrom) {
    this.transactionFrom = transactionFrom;
  }


  public AccountRequest transactionTo(OffsetDateTime transactionTo) {
    
    this.transactionTo = transactionTo;
    return this;
  }

   /**
   * __Optional__. When performing a request using the consent, this is the latest date of transaction records that can be retrieved.
   * @return transactionTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-01-01T00:00Z", value = "__Optional__. When performing a request using the consent, this is the latest date of transaction records that can be retrieved.")

  public OffsetDateTime getTransactionTo() {
    return transactionTo;
  }


  public void setTransactionTo(OffsetDateTime transactionTo) {
    this.transactionTo = transactionTo;
  }


  public AccountRequest expiresAt(OffsetDateTime expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * __Optional__. Used to set a hard date for when the user&#39;s associated &#x60;Consent&#x60; will expire.&lt;br&gt;&lt;br&gt;**Note**: If this supported by the bank, specifying this is property is opting out of having a long-lived consent that can be perpetually re-authorised by the user. This will add an &#x60;expiresAt&#x60; field on the &#x60;Consent&#x60; object which will render it unusable after this date.&lt;br&gt;&lt;br&gt;**Note**: This is not supported by every &#x60;Institution&#x60;. In such case, the request will not fail but the property will be ignored and the created &#x60;Consent&#x60; will not have an expiry date.
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2025-01-01T00:00Z", value = "__Optional__. Used to set a hard date for when the user's associated `Consent` will expire.<br><br>**Note**: If this supported by the bank, specifying this is property is opting out of having a long-lived consent that can be perpetually re-authorised by the user. This will add an `expiresAt` field on the `Consent` object which will render it unusable after this date.<br><br>**Note**: This is not supported by every `Institution`. In such case, the request will not fail but the property will be ignored and the created `Consent` will not have an expiry date.")

  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }


  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }


  public AccountRequest accountIdentifiers(AccountInfo accountIdentifiers) {
    
    this.accountIdentifiers = accountIdentifiers;
    return this;
  }

   /**
   * Get accountIdentifiers
   * @return accountIdentifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AccountInfo getAccountIdentifiers() {
    return accountIdentifiers;
  }


  public void setAccountIdentifiers(AccountInfo accountIdentifiers) {
    this.accountIdentifiers = accountIdentifiers;
  }


  public AccountRequest accountIdentifiersForTransaction(List<AccountInfo> accountIdentifiersForTransaction) {
    
    this.accountIdentifiersForTransaction = accountIdentifiersForTransaction;
    return this;
  }

  public AccountRequest addAccountIdentifiersForTransactionItem(AccountInfo accountIdentifiersForTransactionItem) {
    if (this.accountIdentifiersForTransaction == null) {
      this.accountIdentifiersForTransaction = new ArrayList<AccountInfo>();
    }
    this.accountIdentifiersForTransaction.add(accountIdentifiersForTransactionItem);
    return this;
  }

   /**
   * __Conditional__. Used to create a request for the transactions of the account specified. Once the user authorises the request, only the transactions can be obtained by executing [GET Account Transactions](./#get-account-transactions). &lt;br&gt;&lt;br&gt;This can be specified in conjunction with &#x60;accountIdentifiersForBalance&#x60; to generate a &#x60;Consent&#x60; that can both access the accounts balance and transactions.
   * @return accountIdentifiersForTransaction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "__Conditional__. Used to create a request for the transactions of the account specified. Once the user authorises the request, only the transactions can be obtained by executing [GET Account Transactions](./#get-account-transactions). <br><br>This can be specified in conjunction with `accountIdentifiersForBalance` to generate a `Consent` that can both access the accounts balance and transactions.")

  public List<AccountInfo> getAccountIdentifiersForTransaction() {
    return accountIdentifiersForTransaction;
  }


  public void setAccountIdentifiersForTransaction(List<AccountInfo> accountIdentifiersForTransaction) {
    this.accountIdentifiersForTransaction = accountIdentifiersForTransaction;
  }


  public AccountRequest accountIdentifiersForBalance(List<AccountInfo> accountIdentifiersForBalance) {
    
    this.accountIdentifiersForBalance = accountIdentifiersForBalance;
    return this;
  }

  public AccountRequest addAccountIdentifiersForBalanceItem(AccountInfo accountIdentifiersForBalanceItem) {
    if (this.accountIdentifiersForBalance == null) {
      this.accountIdentifiersForBalance = new ArrayList<AccountInfo>();
    }
    this.accountIdentifiersForBalance.add(accountIdentifiersForBalanceItem);
    return this;
  }

   /**
   * __Conditional__. Used to create a request for the balance of the account specified. Once the user authorises the request, only the balance can be obtained by executing [GET Account Balances](./#get-account-balances).&lt;br&gt;&lt;br&gt; This can be specified in conjunction with &#x60;accountIdentifiersForTransaction&#x60; to generate a &#x60;Consent&#x60; that can both access the accounts balance and transactions.
   * @return accountIdentifiersForBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "__Conditional__. Used to create a request for the balance of the account specified. Once the user authorises the request, only the balance can be obtained by executing [GET Account Balances](./#get-account-balances).<br><br> This can be specified in conjunction with `accountIdentifiersForTransaction` to generate a `Consent` that can both access the accounts balance and transactions.")

  public List<AccountInfo> getAccountIdentifiersForBalance() {
    return accountIdentifiersForBalance;
  }


  public void setAccountIdentifiersForBalance(List<AccountInfo> accountIdentifiersForBalance) {
    this.accountIdentifiersForBalance = accountIdentifiersForBalance;
  }


  public AccountRequest featureScope(Set<FeatureEnum> featureScope) {
    
    this.featureScope = featureScope;
    return this;
  }

  public AccountRequest addFeatureScopeItem(FeatureEnum featureScopeItem) {
    if (this.featureScope == null) {
      this.featureScope = new LinkedHashSet<FeatureEnum>();
    }
    this.featureScope.add(featureScopeItem);
    return this;
  }

   /**
   * __Optional__. Used to granularly specify the set of features that the user will give their consent for when requesting access to their account information. Depending on the &#x60;Institution&#x60;, this may also populate a consent screen which list these scopes before the user authorises.&lt;br&gt;&lt;br&gt;This endpoint accepts allow all [Financial Data Features](/guides/financial-data/features/#feature-list) that the &#x60;Institution&#x60; supports.To find out which scopes an &#x60;Institution&#x60; supports, check [GET Institution](./#get-institution).
   * @return featureScope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "__Optional__. Used to granularly specify the set of features that the user will give their consent for when requesting access to their account information. Depending on the `Institution`, this may also populate a consent screen which list these scopes before the user authorises.<br><br>This endpoint accepts allow all [Financial Data Features](/guides/financial-data/features/#feature-list) that the `Institution` supports.To find out which scopes an `Institution` supports, check [GET Institution](./#get-institution).")

  public Set<FeatureEnum> getFeatureScope() {
    return featureScope;
  }


  public void setFeatureScope(Set<FeatureEnum> featureScope) {
    this.featureScope = featureScope;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountRequest accountRequest = (AccountRequest) o;
    return Objects.equals(this.transactionFrom, accountRequest.transactionFrom) &&
        Objects.equals(this.transactionTo, accountRequest.transactionTo) &&
        Objects.equals(this.expiresAt, accountRequest.expiresAt) &&
        Objects.equals(this.accountIdentifiers, accountRequest.accountIdentifiers) &&
        Objects.equals(this.accountIdentifiersForTransaction, accountRequest.accountIdentifiersForTransaction) &&
        Objects.equals(this.accountIdentifiersForBalance, accountRequest.accountIdentifiersForBalance) &&
        Objects.equals(this.featureScope, accountRequest.featureScope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionFrom, transactionTo, expiresAt, accountIdentifiers, accountIdentifiersForTransaction, accountIdentifiersForBalance, featureScope);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountRequest {\n");
    sb.append("    transactionFrom: ").append(toIndentedString(transactionFrom)).append("\n");
    sb.append("    transactionTo: ").append(toIndentedString(transactionTo)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    accountIdentifiers: ").append(toIndentedString(accountIdentifiers)).append("\n");
    sb.append("    accountIdentifiersForTransaction: ").append(toIndentedString(accountIdentifiersForTransaction)).append("\n");
    sb.append("    accountIdentifiersForBalance: ").append(toIndentedString(accountIdentifiersForBalance)).append("\n");
    sb.append("    featureScope: ").append(toIndentedString(featureScope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

