/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ob.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Summary information regarding account balances of the overall account provided by the bank
 */
@ApiModel(description = "Summary information regarding account balances of the overall account provided by the bank")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class ConsolidatedAccountInformation {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ACCOUNT_BALANCES = "accountBalances";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_BALANCES)
  private List<AccountBalance> accountBalances = null;

  public ConsolidatedAccountInformation() { 
  }

  public ConsolidatedAccountInformation id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Identifier of the consolidated account. When used in Get Account Transactions calls, the transactions between the sub-accounts will not be reported
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier of the consolidated account. When used in Get Account Transactions calls, the transactions between the sub-accounts will not be reported")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ConsolidatedAccountInformation accountBalances(List<AccountBalance> accountBalances) {
    
    this.accountBalances = accountBalances;
    return this;
  }

  public ConsolidatedAccountInformation addAccountBalancesItem(AccountBalance accountBalancesItem) {
    if (this.accountBalances == null) {
      this.accountBalances = new ArrayList<AccountBalance>();
    }
    this.accountBalances.add(accountBalancesItem);
    return this;
  }

   /**
   * Get accountBalances
   * @return accountBalances
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AccountBalance> getAccountBalances() {
    return accountBalances;
  }


  public void setAccountBalances(List<AccountBalance> accountBalances) {
    this.accountBalances = accountBalances;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsolidatedAccountInformation consolidatedAccountInformation = (ConsolidatedAccountInformation) o;
    return Objects.equals(this.id, consolidatedAccountInformation.id) &&
        Objects.equals(this.accountBalances, consolidatedAccountInformation.accountBalances);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, accountBalances);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsolidatedAccountInformation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountBalances: ").append(toIndentedString(accountBalances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

