/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ob.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * __Conditional__. The address of the &#x60;Payee&#x60; or &#x60;Payer&#x60;.&lt;ul&gt;&lt;li&gt;&#x60;payee.address&#x60; is mandatory when the &#x60;paymentType&#x60; is an &#x60;INTERNATIONAL&#x60; payment&lt;/li&gt;&lt;li&gt;An &#x60;Institution&#x60; may require you to specify the &#x60;country&#x60; when used in the context ofthe &#x60;Payee&#x60; to be able to make a payment.&lt;/li&gt;&lt;/ul&gt;
 */
@ApiModel(description = "__Conditional__. The address of the `Payee` or `Payer`.<ul><li>`payee.address` is mandatory when the `paymentType` is an `INTERNATIONAL` payment</li><li>An `Institution` may require you to specify the `country` when used in the context ofthe `Payee` to be able to make a payment.</li></ul>")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class Address {
  public static final String SERIALIZED_NAME_ADDRESS_LINES = "addressLines";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINES)
  private List<String> addressLines = null;

  public static final String SERIALIZED_NAME_STREET_NAME = "streetName";
  @SerializedName(SERIALIZED_NAME_STREET_NAME)
  private String streetName;

  public static final String SERIALIZED_NAME_BUILDING_NUMBER = "buildingNumber";
  @SerializedName(SERIALIZED_NAME_BUILDING_NUMBER)
  private String buildingNumber;

  public static final String SERIALIZED_NAME_POST_CODE = "postCode";
  @SerializedName(SERIALIZED_NAME_POST_CODE)
  private String postCode;

  public static final String SERIALIZED_NAME_TOWN_NAME = "townName";
  @SerializedName(SERIALIZED_NAME_TOWN_NAME)
  private String townName;

  public static final String SERIALIZED_NAME_COUNTY = "county";
  @SerializedName(SERIALIZED_NAME_COUNTY)
  private List<String> county = null;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private String department;

  public static final String SERIALIZED_NAME_SUB_DEPARTMENT = "subDepartment";
  @SerializedName(SERIALIZED_NAME_SUB_DEPARTMENT)
  private String subDepartment;

  public static final String SERIALIZED_NAME_ADDRESS_TYPE = "addressType";
  @SerializedName(SERIALIZED_NAME_ADDRESS_TYPE)
  private AddressTypeEnum addressType;

  public Address() { 
  }

  public Address addressLines(List<String> addressLines) {
    
    this.addressLines = addressLines;
    return this;
  }

  public Address addAddressLinesItem(String addressLinesItem) {
    if (this.addressLines == null) {
      this.addressLines = new ArrayList<String>();
    }
    this.addressLines.add(addressLinesItem);
    return this;
  }

   /**
   * __Optional__. The address line of the address
   * @return addressLines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"Ardenham Court\"]", value = "__Optional__. The address line of the address")

  public List<String> getAddressLines() {
    return addressLines;
  }


  public void setAddressLines(List<String> addressLines) {
    this.addressLines = addressLines;
  }


  public Address streetName(String streetName) {
    
    this.streetName = streetName;
    return this;
  }

   /**
   * __Optional__. The street name of the address
   * @return streetName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Oxford Road", value = "__Optional__. The street name of the address")

  public String getStreetName() {
    return streetName;
  }


  public void setStreetName(String streetName) {
    this.streetName = streetName;
  }


  public Address buildingNumber(String buildingNumber) {
    
    this.buildingNumber = buildingNumber;
    return this;
  }

   /**
   * __Optional__. The building number of the address
   * @return buildingNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "45", value = "__Optional__. The building number of the address")

  public String getBuildingNumber() {
    return buildingNumber;
  }


  public void setBuildingNumber(String buildingNumber) {
    this.buildingNumber = buildingNumber;
  }


  public Address postCode(String postCode) {
    
    this.postCode = postCode;
    return this;
  }

   /**
   * __Optional__. The post code of the address
   * @return postCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "HP19 3EQ", value = "__Optional__. The post code of the address")

  public String getPostCode() {
    return postCode;
  }


  public void setPostCode(String postCode) {
    this.postCode = postCode;
  }


  public Address townName(String townName) {
    
    this.townName = townName;
    return this;
  }

   /**
   * __Optional__. The town name of the address
   * @return townName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Aylesbury", value = "__Optional__. The town name of the address")

  public String getTownName() {
    return townName;
  }


  public void setTownName(String townName) {
    this.townName = townName;
  }


  public Address county(List<String> county) {
    
    this.county = county;
    return this;
  }

  public Address addCountyItem(String countyItem) {
    if (this.county == null) {
      this.county = new ArrayList<String>();
    }
    this.county.add(countyItem);
    return this;
  }

   /**
   * __Optional__. The list of counties for the address
   * @return county
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"Buckinghamshire\"]", value = "__Optional__. The list of counties for the address")

  public List<String> getCounty() {
    return county;
  }


  public void setCounty(List<String> county) {
    this.county = county;
  }


  public Address country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * __Conditional__. The 2-letter country code for the address. &lt;br&gt;&lt;br&gt;An &#x60;Institution&#x60; may require you to specify the &#x60;country&#x60; when used in the context of the &#x60;Payee&#x60; to be able to make a payment
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "GB", value = "__Conditional__. The 2-letter country code for the address. <br><br>An `Institution` may require you to specify the `country` when used in the context of the `Payee` to be able to make a payment")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    this.country = country;
  }


  public Address department(String department) {
    
    this.department = department;
    return this;
  }

   /**
   * __Optional__. The department for the address
   * @return department
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Unit 2", value = "__Optional__. The department for the address")

  public String getDepartment() {
    return department;
  }


  public void setDepartment(String department) {
    this.department = department;
  }


  public Address subDepartment(String subDepartment) {
    
    this.subDepartment = subDepartment;
    return this;
  }

   /**
   * __Optional__. The sub-department for the address
   * @return subDepartment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Floor 3", value = "__Optional__. The sub-department for the address")

  public String getSubDepartment() {
    return subDepartment;
  }


  public void setSubDepartment(String subDepartment) {
    this.subDepartment = subDepartment;
  }


  public Address addressType(AddressTypeEnum addressType) {
    
    this.addressType = addressType;
    return this;
  }

   /**
   * Get addressType
   * @return addressType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AddressTypeEnum getAddressType() {
    return addressType;
  }


  public void setAddressType(AddressTypeEnum addressType) {
    this.addressType = addressType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.addressLines, address.addressLines) &&
        Objects.equals(this.streetName, address.streetName) &&
        Objects.equals(this.buildingNumber, address.buildingNumber) &&
        Objects.equals(this.postCode, address.postCode) &&
        Objects.equals(this.townName, address.townName) &&
        Objects.equals(this.county, address.county) &&
        Objects.equals(this.country, address.country) &&
        Objects.equals(this.department, address.department) &&
        Objects.equals(this.subDepartment, address.subDepartment) &&
        Objects.equals(this.addressType, address.addressType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLines, streetName, buildingNumber, postCode, townName, county, country, department, subDepartment, addressType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    sb.append("    addressLines: ").append(toIndentedString(addressLines)).append("\n");
    sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
    sb.append("    buildingNumber: ").append(toIndentedString(buildingNumber)).append("\n");
    sb.append("    postCode: ").append(toIndentedString(postCode)).append("\n");
    sb.append("    townName: ").append(toIndentedString(townName)).append("\n");
    sb.append("    county: ").append(toIndentedString(county)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    subDepartment: ").append(toIndentedString(subDepartment)).append("\n");
    sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

