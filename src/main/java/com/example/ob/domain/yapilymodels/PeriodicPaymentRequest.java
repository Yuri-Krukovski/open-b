/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ob.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * __Conditional__. Used to specify properties to define a periodic payment. &lt;br&gt;&lt;br&gt;Must be specified when the payment &#x60;type&#x60; is one of the following:&lt;ul&gt;     &lt;li&gt;&lt;code&gt;DOMESTIC_PERIODIC_PAYMENT&lt;/code&gt;&lt;/li&gt;     &lt;li&gt;&lt;code&gt;INTERNATIONAL_PERIODIC_PAYMENT&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
 */
@ApiModel(description = "__Conditional__. Used to specify properties to define a periodic payment. <br><br>Must be specified when the payment `type` is one of the following:<ul>     <li><code>DOMESTIC_PERIODIC_PAYMENT</code></li>     <li><code>INTERNATIONAL_PERIODIC_PAYMENT</code></li></ul>")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class PeriodicPaymentRequest {
  public static final String SERIALIZED_NAME_FREQUENCY = "frequency";
  @SerializedName(SERIALIZED_NAME_FREQUENCY)
  private FrequencyRequest frequency;

  public static final String SERIALIZED_NAME_NUMBER_OF_PAYMENTS = "numberOfPayments";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_PAYMENTS)
  private Integer numberOfPayments;

  public static final String SERIALIZED_NAME_NEXT_PAYMENT_DATE_TIME = "nextPaymentDateTime";
  @SerializedName(SERIALIZED_NAME_NEXT_PAYMENT_DATE_TIME)
  private OffsetDateTime nextPaymentDateTime;

  public static final String SERIALIZED_NAME_NEXT_PAYMENT_AMOUNT = "nextPaymentAmount";
  @SerializedName(SERIALIZED_NAME_NEXT_PAYMENT_AMOUNT)
  private Amount nextPaymentAmount;

  public static final String SERIALIZED_NAME_FINAL_PAYMENT_DATE_TIME = "finalPaymentDateTime";
  @SerializedName(SERIALIZED_NAME_FINAL_PAYMENT_DATE_TIME)
  private OffsetDateTime finalPaymentDateTime;

  public static final String SERIALIZED_NAME_FINAL_PAYMENT_AMOUNT = "finalPaymentAmount";
  @SerializedName(SERIALIZED_NAME_FINAL_PAYMENT_AMOUNT)
  private Amount finalPaymentAmount;

  public PeriodicPaymentRequest() { 
  }

  public PeriodicPaymentRequest frequency(FrequencyRequest frequency) {
    
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public FrequencyRequest getFrequency() {
    return frequency;
  }


  public void setFrequency(FrequencyRequest frequency) {
    this.frequency = frequency;
  }


  public PeriodicPaymentRequest numberOfPayments(Integer numberOfPayments) {
    
    this.numberOfPayments = numberOfPayments;
    return this;
  }

   /**
   * __Conditional__. Defines the total number of payments to be made.&lt;br&gt;&lt;br&gt;This is required if &#x60;finalPaymentDateTime&#x60; is not specified and it is intended for the periodic payment have a fixed amount of payments.
   * @return numberOfPayments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "__Conditional__. Defines the total number of payments to be made.<br><br>This is required if `finalPaymentDateTime` is not specified and it is intended for the periodic payment have a fixed amount of payments.")

  public Integer getNumberOfPayments() {
    return numberOfPayments;
  }


  public void setNumberOfPayments(Integer numberOfPayments) {
    this.numberOfPayments = numberOfPayments;
  }


  public PeriodicPaymentRequest nextPaymentDateTime(OffsetDateTime nextPaymentDateTime) {
    
    this.nextPaymentDateTime = nextPaymentDateTime;
    return this;
  }

   /**
   * __Conditional__. Defines when to start the recurring payment date and time. Specify this if you want the first payment to start on a different day than what the frequency object defines.
   * @return nextPaymentDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-01-10T00:00Z", value = "__Conditional__. Defines when to start the recurring payment date and time. Specify this if you want the first payment to start on a different day than what the frequency object defines.")

  public OffsetDateTime getNextPaymentDateTime() {
    return nextPaymentDateTime;
  }


  public void setNextPaymentDateTime(OffsetDateTime nextPaymentDateTime) {
    this.nextPaymentDateTime = nextPaymentDateTime;
  }


  public PeriodicPaymentRequest nextPaymentAmount(Amount nextPaymentAmount) {
    
    this.nextPaymentAmount = nextPaymentAmount;
    return this;
  }

   /**
   * Get nextPaymentAmount
   * @return nextPaymentAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Amount getNextPaymentAmount() {
    return nextPaymentAmount;
  }


  public void setNextPaymentAmount(Amount nextPaymentAmount) {
    this.nextPaymentAmount = nextPaymentAmount;
  }


  public PeriodicPaymentRequest finalPaymentDateTime(OffsetDateTime finalPaymentDateTime) {
    
    this.finalPaymentDateTime = finalPaymentDateTime;
    return this;
  }

   /**
   * __Conditional__. Defines the final payment date and time. To create an open-ended periodic payment, do not specify this property.
   * @return finalPaymentDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2030-01-10T00:00Z", value = "__Conditional__. Defines the final payment date and time. To create an open-ended periodic payment, do not specify this property.")

  public OffsetDateTime getFinalPaymentDateTime() {
    return finalPaymentDateTime;
  }


  public void setFinalPaymentDateTime(OffsetDateTime finalPaymentDateTime) {
    this.finalPaymentDateTime = finalPaymentDateTime;
  }


  public PeriodicPaymentRequest finalPaymentAmount(Amount finalPaymentAmount) {
    
    this.finalPaymentAmount = finalPaymentAmount;
    return this;
  }

   /**
   * Get finalPaymentAmount
   * @return finalPaymentAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Amount getFinalPaymentAmount() {
    return finalPaymentAmount;
  }


  public void setFinalPaymentAmount(Amount finalPaymentAmount) {
    this.finalPaymentAmount = finalPaymentAmount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeriodicPaymentRequest periodicPaymentRequest = (PeriodicPaymentRequest) o;
    return Objects.equals(this.frequency, periodicPaymentRequest.frequency) &&
        Objects.equals(this.numberOfPayments, periodicPaymentRequest.numberOfPayments) &&
        Objects.equals(this.nextPaymentDateTime, periodicPaymentRequest.nextPaymentDateTime) &&
        Objects.equals(this.nextPaymentAmount, periodicPaymentRequest.nextPaymentAmount) &&
        Objects.equals(this.finalPaymentDateTime, periodicPaymentRequest.finalPaymentDateTime) &&
        Objects.equals(this.finalPaymentAmount, periodicPaymentRequest.finalPaymentAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(frequency, numberOfPayments, nextPaymentDateTime, nextPaymentAmount, finalPaymentDateTime, finalPaymentAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeriodicPaymentRequest {\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    numberOfPayments: ").append(toIndentedString(numberOfPayments)).append("\n");
    sb.append("    nextPaymentDateTime: ").append(toIndentedString(nextPaymentDateTime)).append("\n");
    sb.append("    nextPaymentAmount: ").append(toIndentedString(nextPaymentAmount)).append("\n");
    sb.append("    finalPaymentDateTime: ").append(toIndentedString(finalPaymentDateTime)).append("\n");
    sb.append("    finalPaymentAmount: ").append(toIndentedString(finalPaymentAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

