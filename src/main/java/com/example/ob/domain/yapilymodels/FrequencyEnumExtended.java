/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ob.domain.yapilymodels;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
 * __Mandatory__. See [payment frequency](/guides/payments/payment-execution/periodic-payments/#payment-frequency) for more information
 */
@JsonAdapter(FrequencyEnumExtended.Adapter.class)
public enum FrequencyEnumExtended {
  
  DAILY("DAILY"),
  
  EVERY_WORKING_DAY("EVERY_WORKING_DAY"),
  
  CALENDAR_DAY("CALENDAR_DAY"),
  
  WEEKLY("WEEKLY"),
  
  EVERY_TWO_WEEKS("EVERY_TWO_WEEKS"),
  
  MONTHLY("MONTHLY"),
  
  EVERY_TWO_MONTHS("EVERY_TWO_MONTHS"),
  
  QUARTERLY("QUARTERLY"),
  
  SEMIANNUAL("SEMIANNUAL"),
  
  ANNUAL("ANNUAL");

  private String value;

  FrequencyEnumExtended(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static FrequencyEnumExtended fromValue(String value) {
    for (FrequencyEnumExtended b : FrequencyEnumExtended.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<FrequencyEnumExtended> {
    @Override
    public void write(final JsonWriter jsonWriter, final FrequencyEnumExtended enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public FrequencyEnumExtended read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return FrequencyEnumExtended.fromValue(value);
    }
  }
}

