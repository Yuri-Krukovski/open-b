/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.14.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ob.domain.yapilymodels;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * __Conditional__. Used to specify properties to define an international payment. &lt;br&gt;&lt;br&gt;Must be specified when the payment &#x60;type&#x60; is one of the following:&lt;ul&gt;     &lt;li&gt;&lt;code&gt;INTERNATIONAL_SINGLE_PAYMENT&lt;/code&gt;&lt;/li&gt;     &lt;li&gt;&lt;code&gt;INTERNATIONAL_SCHEDULED_PAYMENT&lt;/code&gt;&lt;/li&gt;     &lt;li&gt;&lt;code&gt;INTERNATIONAL_PERIODIC_PAYMENT&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
 */
@ApiModel(description = "__Conditional__. Used to specify properties to define an international payment. <br><br>Must be specified when the payment `type` is one of the following:<ul>     <li><code>INTERNATIONAL_SINGLE_PAYMENT</code></li>     <li><code>INTERNATIONAL_SCHEDULED_PAYMENT</code></li>     <li><code>INTERNATIONAL_PERIODIC_PAYMENT</code></li></ul>")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T14:42:32.575816279Z[Europe/London]")
public class InternationalPaymentRequest {
  public static final String SERIALIZED_NAME_CURRENCY_OF_TRANSFER = "currencyOfTransfer";
  @SerializedName(SERIALIZED_NAME_CURRENCY_OF_TRANSFER)
  private String currencyOfTransfer;

  public static final String SERIALIZED_NAME_EXCHANGE_RATE_INFORMATION = "exchangeRateInformation";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_RATE_INFORMATION)
  private ExchangeRateInformation exchangeRateInformation;

  public static final String SERIALIZED_NAME_PURPOSE = "purpose";
  @SerializedName(SERIALIZED_NAME_PURPOSE)
  private String purpose;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private PriorityCodeEnum priority;

  public static final String SERIALIZED_NAME_CHARGE_BEARER = "chargeBearer";
  @SerializedName(SERIALIZED_NAME_CHARGE_BEARER)
  private ChargeBearerType chargeBearer;

  public InternationalPaymentRequest() { 
  }

  public InternationalPaymentRequest currencyOfTransfer(String currencyOfTransfer) {
    
    this.currencyOfTransfer = currencyOfTransfer;
    return this;
  }

   /**
   * __Mandatory__. The 3-letter currency code for the currency of the payment to be transferred which can differ from the currency of the payer&#39;s account.
   * @return currencyOfTransfer
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "__Mandatory__. The 3-letter currency code for the currency of the payment to be transferred which can differ from the currency of the payer's account.")

  public String getCurrencyOfTransfer() {
    return currencyOfTransfer;
  }


  public void setCurrencyOfTransfer(String currencyOfTransfer) {
    this.currencyOfTransfer = currencyOfTransfer;
  }


  public InternationalPaymentRequest exchangeRateInformation(ExchangeRateInformation exchangeRateInformation) {
    
    this.exchangeRateInformation = exchangeRateInformation;
    return this;
  }

   /**
   * Get exchangeRateInformation
   * @return exchangeRateInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ExchangeRateInformation getExchangeRateInformation() {
    return exchangeRateInformation;
  }


  public void setExchangeRateInformation(ExchangeRateInformation exchangeRateInformation) {
    this.exchangeRateInformation = exchangeRateInformation;
  }


  public InternationalPaymentRequest purpose(String purpose) {
    
    this.purpose = purpose;
    return this;
  }

   /**
   * __Optional__. Used to indicate the external purpose as a [ISO20022 purpose code](https://www.rba.hr/documents/20182/183267/External+purpose+codes+list/8a28f888-1f83-5e29-d6ed-fce05f428689?version&#x3D;1.1) value.
   * @return purpose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "__Optional__. Used to indicate the external purpose as a [ISO20022 purpose code](https://www.rba.hr/documents/20182/183267/External+purpose+codes+list/8a28f888-1f83-5e29-d6ed-fce05f428689?version=1.1) value.")

  public String getPurpose() {
    return purpose;
  }


  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }


  public InternationalPaymentRequest priority(PriorityCodeEnum priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PriorityCodeEnum getPriority() {
    return priority;
  }


  public void setPriority(PriorityCodeEnum priority) {
    this.priority = priority;
  }


  public InternationalPaymentRequest chargeBearer(ChargeBearerType chargeBearer) {
    
    this.chargeBearer = chargeBearer;
    return this;
  }

   /**
   * Get chargeBearer
   * @return chargeBearer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ChargeBearerType getChargeBearer() {
    return chargeBearer;
  }


  public void setChargeBearer(ChargeBearerType chargeBearer) {
    this.chargeBearer = chargeBearer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InternationalPaymentRequest internationalPaymentRequest = (InternationalPaymentRequest) o;
    return Objects.equals(this.currencyOfTransfer, internationalPaymentRequest.currencyOfTransfer) &&
        Objects.equals(this.exchangeRateInformation, internationalPaymentRequest.exchangeRateInformation) &&
        Objects.equals(this.purpose, internationalPaymentRequest.purpose) &&
        Objects.equals(this.priority, internationalPaymentRequest.priority) &&
        Objects.equals(this.chargeBearer, internationalPaymentRequest.chargeBearer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyOfTransfer, exchangeRateInformation, purpose, priority, chargeBearer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InternationalPaymentRequest {\n");
    sb.append("    currencyOfTransfer: ").append(toIndentedString(currencyOfTransfer)).append("\n");
    sb.append("    exchangeRateInformation: ").append(toIndentedString(exchangeRateInformation)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    chargeBearer: ").append(toIndentedString(chargeBearer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

